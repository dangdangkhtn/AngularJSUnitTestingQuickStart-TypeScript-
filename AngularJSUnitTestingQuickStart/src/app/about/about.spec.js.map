{"version":3,"file":"about.spec.js","sourceRoot":"","sources":["about.spec.ts"],"names":[],"mappings":"AAAC,QAAQ,CAAC,aAAa,EAAE;IACrB,IAAI,IAAe,CAAC;IACpB,IAAI,QAAkB,CAAC;IAEvB,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC;IAC/C,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,uBAAuB,CAAC,CAAC,CAAC;IACzD,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC;IAE7C,UAAU,CAAC,MAAM,CAAC,UAAU,WAAkC,EAAE,UAAoB;QAChF,QAAQ,GAAG,UAAU,CAAC;QAEtB,KAAK,CAAC,QAAQ,EAAE,YAAY,CAAC,CAAC;QAC9B,KAAK,CAAC,QAAQ,EAAE,YAAY,CAAC,CAAC,GAAG,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;QAExD,IAAI,GAAc,WAAW,CAAC,WAAW,EAAE;YACvC,QAAQ,EAAE,QAAQ;SACrB,CAAC,CAAC;IACP,CAAC,CAAC,CAAC,CAAC;IAEJ,QAAQ,CAAC,aAAa,EAAE;QACpB,IAAI,MAA2B,EAC3B,UAAqB,EACrB,KAAK,GAAG,OAAO,CAAC;QAEpB,UAAU,CAAC,MAAM,CAAC,UAAU,QAA6B,EAAE,cAAwC,EAAE,YAAuB;YACxH,MAAM,GAAG,QAAQ,CAAC;YAClB,UAAU,GAAG,YAAY,CAAC;YAE1B,cAAc,CAAC,GAAG,CAAC,2BAA2B,EAAE,EAAE,CAAC,CAAC;QACxD,CAAC,CAAC,CAAC,CAAC;QAEJ,EAAE,CAAC,uBAAuB,EAAE;YACxB,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;QAClD,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,2BAA2B,EAAE;YAC5B,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;YACjB,UAAU,CAAC,OAAO,EAAE,CAAC;YACrB,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC5C,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,WAAW,EAAE;QAClB,EAAE,CAAC,2BAA2B,EAAE;YAC5B,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,WAAW,EAAE,CAAC;QACrC,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,0BAA0B,EAAE;YAC3B,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,EAAE,CAAC;QACpC,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,iCAAiC,EAAE;YAClC,MAAM,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,gBAAgB,EAAE,CAAC;YAE/C,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;QAC3C,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,sCAAsC,EAAE;YACvC,IAAI,OAAO,GAAG,eAAe,CAAC;YAE9B,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;YAE5B,MAAM,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,oBAAoB,CAAC,OAAO,CAAC,CAAC;QAC9D,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC","sourcesContent":["ï»¿describe('Unit: About', function () {\r\n    var ctrl: AboutCtrl;\r\n    var messages: Messages;\r\n\r\n    beforeEach(angular.mock.module('myApp.about'));\r\n    beforeEach(angular.mock.module('myApp.models.messages'));\r\n    beforeEach(angular.mock.module('ui.router'));\r\n\r\n    beforeEach(inject(function ($controller: ng.IControllerService, _Messages_: Messages) {\r\n        messages = _Messages_;\r\n\r\n        spyOn(messages, 'setMessage');\r\n        spyOn(messages, 'getMessage').and.returnValue('Hello!');\r\n\r\n        ctrl = <AboutCtrl>$controller('AboutCtrl', {\r\n            Messages: messages\r\n        });\r\n    }));\r\n\r\n    describe('About Route', function () {\r\n        var $state: ng.ui.IStateService,\r\n            $rootScope: ng.IScope,\r\n            state = 'about';\r\n\r\n        beforeEach(inject(function (_$state_: ng.ui.IStateService, $templateCache: ng.ITemplateCacheService, _$rootScope_: ng.IScope) {\r\n            $state = _$state_;\r\n            $rootScope = _$rootScope_;\r\n\r\n            $templateCache.put('app/about/about.tmpl.html', '');\r\n        }));\r\n\r\n        it('should respond to URL', function () {\r\n            expect($state.href(state)).toEqual('#/about');\r\n        });\r\n\r\n        it('should activate the state', function () {\r\n            $state.go(state);\r\n            $rootScope.$digest();\r\n            expect($state.current.name).toBe(state);\r\n        });\r\n    });\r\n\r\n    describe('AboutCtrl', function () {\r\n        it('should have title defined', function () {\r\n            expect(ctrl.title).toBeDefined();\r\n        });\r\n\r\n        it('should have body defined', function () {\r\n            expect(ctrl.body).toBeDefined();\r\n        });\r\n\r\n        it('should call Messages.getMessage', function () {\r\n            expect(messages.getMessage).toHaveBeenCalled();\r\n\r\n            expect(ctrl.message).toEqual('Hello!');\r\n        });\r\n\r\n        it('should call updateMessage on message', function () {\r\n            var message = 'Hello Message';\r\n\r\n            ctrl.updateMessage(message);\r\n\r\n            expect(messages.setMessage).toHaveBeenCalledWith(message);\r\n        });\r\n    });\r\n});\r\n"]}