{"version":3,"file":"experiments.js","sourceRoot":"","sources":["experiments.ts"],"names":[],"mappings":"AAMA;IAEI,qBAAY,KAAsB;QAC9B,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;IAC7B,CAAC;;IACD,oCAAc,GAAd;QACI,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;IACzD,CAAC;;IACL,kBAAC;AAAD,CAAC,AARD,IAQC;AAAA,CAAC;AAEF;IASI,yBAAY,QAAkB,EAAE,WAAwB;QAT5D,iBAyBC;QAvBG,UAAK,GAAG,kBAAkB,CAAC;QAC3B,SAAI,GAAG,6BAA6B,CAAC;QAQjC,IAAI,CAAC,OAAO,GAAG,QAAQ,CAAC,UAAU,EAAE,CAAC;QACrC,sBAAsB;QACtB,mFAAmF;QACnF,mFAAmF;QACnF,mFAAmF;QACnF,kFAAkF;QAClF,GAAG;QAEH,WAAW,CAAC,cAAc,EAAE;aACvB,IAAI,CAAC,UAAC,MAAM,IAAQ,KAAI,CAAC,WAAW,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAA;QAC3D,IAAI,CAAC,aAAa,GAAG,UAAU,CAAS;YACpC,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;QAC3B,CAAC,CAAC;IACN,CAAC;IAjBD,uCAAa,GAAb,UAAc,CAAS,IAAI,CAAC;;;IAkBhC,sBAAC;AAAD,CAAC,AAzBD,IAyBC;AAAA,CAAC;AAQF;IAGI,mCAAmB,MAAyB;QAAzB,WAAM,GAAN,MAAM,CAAmB;QAD5C,cAAS,GAAW,CAAC,CAAC;QAElB,MAAM,CAAC,YAAY,GAAG;YAClB,MAAM,CAAC,MAAM,CAAC;gBACV,MAAM,CAAC,UAAU,CAAC,SAAS,EAAE,CAAC;YAClC,CAAC,CAAC,CAAC;QACP,CAAC,CAAA;IACL,CAAC;;IARM,iCAAO,GAAa,CAAC,QAAQ,CAAC,CAAC;IAS1C,gCAAC;AAAD,CAAC,AAVD,IAUC;AAED,IAAI,MAAM,GAAG,UAAU,KAAwB,EAAE,OAAe,EAAE,QAAa;IAC3E,OAAO,CAAC,EAAE,CAAC,OAAO,EAAE;QAChB,KAAK,CAAC,YAAY,EAAE,CAAC;IACzB,CAAC,CAAC,CAAA;AACN,CAAC,CAAC;AAEF,OAAO,CAAC,MAAM,CAAC,mBAAmB,EAAE;IAChC,WAAW;IACX,uBAAuB;CAC1B,CAAC;KACG,MAAM,CAAC,UAAU,cAAyC;IACvD,cAAc;SACT,KAAK,CAAC,aAAa,EAAE;QAClB,GAAG,EAAE,cAAc;QACnB,WAAW,EAAE,uCAAuC;QACpD,UAAU,EAAE,gCAAgC;KAC/C,CAAC,CACD;AACT,CAAC,CAAC;KACD,UAAU,CAAC,iBAAiB,EAAE,CAAC,UAAU,EAAC,aAAa,EAAC,eAAe,CAAC,CAAC;KACzE,OAAO,CAAC,aAAa,EAAE,WAAW,CAAC;KACnC,SAAS,CAAC,YAAY,EAAE;IACrB,MAAM,CAAC;QACH,KAAK,EAAE,IAAI;QACX,QAAQ,EAAE,GAAG;QACb,QAAQ,EAAE,0BAA0B;YACpC,8BAA8B;YAC9B,mCAAmC;YACnC,kDAAkD;YAClD,QAAQ;QACR,IAAI,EAAE,MAAM;QACZ,UAAU,EAAE,yBAAyB;KACxC,CAAA;AACL,CAAC,CAAC,CACD","sourcesContent":["ï»¿interface IExperiment {\r\n    name: string;\n    description: string;\n    completed: string;\n}\n\nclass Experiments {\n    httpService: ng.IHttpService;\n    constructor($http: ng.IHttpService) {\n        this.httpService = $http;\n    };\n    getExperiments() {\n        return this.httpService.get('data/experiments.json');\n    };\n};\r\n\r\nclass ExperimentsCtrl {\r\n\r\n    title = 'Experiments Page';\r\n    body = 'This is the about page body';\r\n    message: string;\r\n    experiments: any;\r\n\r\n    updateMessage(m: string) { };\r\n    abstract: string;\r\n    constructor(Messages: Messages, Experiments: Experiments) {\r\n        \r\n        this.message = Messages.getMessage();\r\n        //this.experiments = [\n        //    { name: \"Experiment 1\", description: \"This is an experiment\", completed: 0 },\n        //    { name: \"Experiment 2\", description: \"This is an experiment\", completed: 0 },\n        //    { name: \"Experiment 3\", description: \"This is an experiment\", completed: 0 },\n        //    { name: \"Experiment 4\", description: \"This is an experiment\", completed: 0 }\n        //]\r\n\r\n        Experiments.getExperiments()\n            .then((result) => {  this.experiments = result.data; })\r\n        this.updateMessage = function (m: string) {\r\n            Messages.setMessage(m);           \r\n        };\r\n    };\r\n};\r\n\r\n\ninterface IExperimentsScope extends ng.IScope {\r\n    doExperiment: () => void;\r\n    experiment: any;\r\n}  \n\nclass CustomDirectiveController {\r\n    static $inject: string[] = ['$scope'];\r\n    completed: number = 0;\r\n    constructor(public $scope: IExperimentsScope) {    \r\n        $scope.doExperiment = function () {\n            $scope.$apply(function () {\n                $scope.experiment.completed++;\n            });\r\n        }\r\n    };    \n}\n\nvar linker = function (scope: IExperimentsScope, element: JQuery, attattrs: any) {\n    element.on('click', function () {\n        scope.doExperiment();\n    })\n};\n\nangular.module('myApp.experiments', [\n    'ui.router',\n    'myApp.models.messages'\n])\n    .config(function ($stateProvider: angular.ui.IStateProvider) {\n        $stateProvider\n            .state('experiments', {\n                url: '/experiments',\n                templateUrl: 'app/experiments/experiments.tmpl.html',\n                controller: 'ExperimentsCtrl as experiments'\n            })\n            ;\n    })\n    .controller('ExperimentsCtrl', ['Messages','Experiments',ExperimentsCtrl])\n    .service('Experiments', Experiments)\n    .directive('experiment', () => {\n        return {\n            scope: true,\n            restrict: 'E',\n            template: '<div class=\"experiment\">' +\n            '<h3>{{experiment.name}}</h3>' +\n            '<p>{{experiment.description}}</p>' +\n            '<p><strong>{{experiment.completed}}</strong></p>' +\n            '</div>',\n            link: linker,\n            controller: CustomDirectiveController\n        }\n    })\n    ;"]}